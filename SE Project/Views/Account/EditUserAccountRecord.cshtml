@model SE_Project.Models.AccountUpdateViewModel

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


<section class="h-100">
    <div class="container h-100">
        <div class="row justify-content-sm-center h-100">
            <div class="col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9">
                <div class="text-center my-5">
                    <img src="~/Photos/Mazak_logo.png" alt="logo" width="400" />
                </div>
                <div class="card shadow-lg">
                    <div class="card-body p-5">
                        <h1 class="fs-4 card-title fw-bold mb-4">UPDATE USER ACCOUNT</h1>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @using (Html.BeginForm("EditUserAccountRecord", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label mb-2 text-muted required-field" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readyonly" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label mb-2 text-muted" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.EmployeeID, new { @class = "control-label mb-2 text-muted required-field" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control", @readonly = "readyonly" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.UserRole, new { @class = "control-label mb-2 text-muted required-field" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.UserRole, new SelectList(new[] { "Admin", "User" }), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.UserRole, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label mb-2 text-muted" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsActive)
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button id="updateButton" type="submit" class="btn btn-primary">UPDATE INFORMATION</button>
                                </div>
                            </div>

                            //Pop-out Confirmation Message
                            <script>
                                document.getElementById("updateButton").addEventListener("click", function (event) {
                                    event.preventDefault(); // Prevent the form from submitting immediately
                                    if (confirm("Are you confirm update?")) {
                                        // User clicked "OK", so submit the form
                                        document.forms[0].submit();
                                    } else {
                                        // User clicked "Cancel", so do nothing
                                    }
                                });
                            </script>
                        }
                    </div>
        </div>
        <div class="text-center mt-5 text-muted">
            Copyright &copy; 2023 &mdash; Yamazaki Mazak Singapore Pte Ltd
        </div>
    </div>
</div>
</div>
</section>
